(function () {
'use strict';

var canvas = document.querySelector("#canvas");
// getting the context
var ctx = canvas.getContext("2d");

var x = canvas.width / 2;
var y = canvas.height - 150;

var ballX = 2;
var ballY = -2;
var ballRadius = 25;

var paddleWidth = 120;
var paddleHeight = 5;
var paddleX = canvas.width / 2 - paddleWidth / 2;

var leftPressed = false;
var rightPressed = false;

function pressDownHandle(e) {
  var key = e.key;


  if (key === "ArrowLeft") {
    leftPressed = true;
  }
  if (key === "ArrowRight") {
    rightPressed = true;
  }
}

function pressUpHandle(e) {
  var key = e.key;


  if (key === "ArrowLeft") {
    leftPressed = false;
  }
  if (key === "ArrowRight") {
    rightPressed = false;
  }
}

document.addEventListener("keydown", pressDownHandle);
document.addEventListener("keyup", pressUpHandle);

function drawBall() {
  ctx.beginPath();
  ctx.arc(x, y, ballRadius, 0, Math.PI * 2);
  ctx.fillStyle = "#f3d2ca";
  ctx.fill();
  ctx.closePath();
}

function drawPaddle() {
  ctx.beginPath();
  ctx.rect(paddleX, canvas.height - 30, paddleWidth, paddleHeight);
  ctx.fillStyle = "#ff3212";
  ctx.fill();
  ctx.closePath();
}

function draw() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);

  if (x + ballX > canvas.width - ballRadius || x + ballX < ballRadius) {
    ballX = -ballX;
  }
  if (y + ballY < ballRadius) {
    ballY = -ballY;
  }
  if (y + ballY > canvas.height - ballRadius - 30) {
    if (x > paddleX && x < paddleX + paddleWidth) {
      ballY = -ballY;
    } else {
      console.log("GAME OVER");
    }
  }

  if (leftPressed && paddleX > 0) {
    paddleX -= 7;
  }
  if (rightPressed && paddleX < canvas.width - paddleWidth) {
    paddleX += 7;
  }

  drawBall();
  drawPaddle();
  x += ballX;
  y += ballY;
}

setInterval(draw, 10);

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyJzcmMvdGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjYW52YXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NhbnZhc1wiKTtcbi8vIGdldHRpbmcgdGhlIGNvbnRleHRcbmNvbnN0IGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIik7XG5cbmxldCB4ID0gY2FudmFzLndpZHRoIC8gMjtcbmxldCB5ID0gY2FudmFzLmhlaWdodCAtIDE1MDtcblxubGV0IGJhbGxYID0gMjtcbmxldCBiYWxsWSA9IC0yO1xuY29uc3QgYmFsbFJhZGl1cyA9IDI1O1xuXG5jb25zdCBwYWRkbGVXaWR0aCA9IDEyMDtcbmNvbnN0IHBhZGRsZUhlaWdodCA9IDU7XG5sZXQgcGFkZGxlWCA9IGNhbnZhcy53aWR0aCAvIDIgLSBwYWRkbGVXaWR0aCAvIDI7XG5cbmxldCBsZWZ0UHJlc3NlZCA9IGZhbHNlO1xubGV0IHJpZ2h0UHJlc3NlZCA9IGZhbHNlO1xuXG5mdW5jdGlvbiBwcmVzc0Rvd25IYW5kbGUoZSkge1xuICBjb25zdCB7IGtleSB9ID0gZTtcblxuICBpZiAoa2V5ID09PSBcIkFycm93TGVmdFwiKSB7XG4gICAgbGVmdFByZXNzZWQgPSB0cnVlO1xuICB9XG4gIGlmIChrZXkgPT09IFwiQXJyb3dSaWdodFwiKSB7XG4gICAgcmlnaHRQcmVzc2VkID0gdHJ1ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwcmVzc1VwSGFuZGxlKGUpIHtcbiAgY29uc3QgeyBrZXkgfSA9IGU7XG5cbiAgaWYgKGtleSA9PT0gXCJBcnJvd0xlZnRcIikge1xuICAgIGxlZnRQcmVzc2VkID0gZmFsc2U7XG4gIH1cbiAgaWYgKGtleSA9PT0gXCJBcnJvd1JpZ2h0XCIpIHtcbiAgICByaWdodFByZXNzZWQgPSBmYWxzZTtcbiAgfVxufVxuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBwcmVzc0Rvd25IYW5kbGUpO1xuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHByZXNzVXBIYW5kbGUpO1xuXG5mdW5jdGlvbiBkcmF3QmFsbCgpIHtcbiAgY3R4LmJlZ2luUGF0aCgpO1xuICBjdHguYXJjKHgsIHksIGJhbGxSYWRpdXMsIDAsIE1hdGguUEkgKiAyKTtcbiAgY3R4LmZpbGxTdHlsZSA9IFwiI2YzZDJjYVwiO1xuICBjdHguZmlsbCgpO1xuICBjdHguY2xvc2VQYXRoKCk7XG59XG5cbmZ1bmN0aW9uIGRyYXdQYWRkbGUoKSB7XG4gIGN0eC5iZWdpblBhdGgoKTtcbiAgY3R4LnJlY3QocGFkZGxlWCwgY2FudmFzLmhlaWdodCAtIDMwLCBwYWRkbGVXaWR0aCwgcGFkZGxlSGVpZ2h0KTtcbiAgY3R4LmZpbGxTdHlsZSA9IFwiI2ZmMzIxMlwiO1xuICBjdHguZmlsbCgpO1xuICBjdHguY2xvc2VQYXRoKCk7XG59XG5cbmZ1bmN0aW9uIGRyYXcoKSB7XG4gIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblxuICBpZiAoeCArIGJhbGxYID4gY2FudmFzLndpZHRoIC0gYmFsbFJhZGl1cyB8fCB4ICsgYmFsbFggPCBiYWxsUmFkaXVzKSB7XG4gICAgYmFsbFggPSAtYmFsbFg7XG4gIH1cbiAgaWYgKHkgKyBiYWxsWSA8IGJhbGxSYWRpdXMpIHtcbiAgICBiYWxsWSA9IC1iYWxsWTtcbiAgfVxuICBpZiAoeSArIGJhbGxZID4gY2FudmFzLmhlaWdodCAtIGJhbGxSYWRpdXMgLSAzMCkge1xuICAgIGlmICh4ID4gcGFkZGxlWCAmJiB4IDwgcGFkZGxlWCArIHBhZGRsZVdpZHRoKSB7XG4gICAgICBiYWxsWSA9IC1iYWxsWTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coXCJHQU1FIE9WRVJcIik7XG4gICAgfVxuICB9XG5cbiAgaWYgKGxlZnRQcmVzc2VkICYmIHBhZGRsZVggPiAwKSB7XG4gICAgcGFkZGxlWCAtPSA3O1xuICB9XG4gIGlmIChyaWdodFByZXNzZWQgJiYgcGFkZGxlWCA8IGNhbnZhcy53aWR0aCAtIHBhZGRsZVdpZHRoKSB7XG4gICAgcGFkZGxlWCArPSA3O1xuICB9XG5cbiAgZHJhd0JhbGwoKTtcbiAgZHJhd1BhZGRsZSgpO1xuICB4ICs9IGJhbGxYO1xuICB5ICs9IGJhbGxZO1xufVxuXG5zZXRJbnRlcnZhbChkcmF3LCAxMCk7XG4iXSwibmFtZXMiOlsiY2FudmFzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY3R4IiwiZ2V0Q29udGV4dCIsIngiLCJ3aWR0aCIsInkiLCJoZWlnaHQiLCJiYWxsWCIsImJhbGxZIiwiYmFsbFJhZGl1cyIsInBhZGRsZVdpZHRoIiwicGFkZGxlSGVpZ2h0IiwicGFkZGxlWCIsImxlZnRQcmVzc2VkIiwicmlnaHRQcmVzc2VkIiwicHJlc3NEb3duSGFuZGxlIiwiZSIsImtleSIsInByZXNzVXBIYW5kbGUiLCJhZGRFdmVudExpc3RlbmVyIiwiZHJhd0JhbGwiLCJiZWdpblBhdGgiLCJhcmMiLCJNYXRoIiwiUEkiLCJmaWxsU3R5bGUiLCJmaWxsIiwiY2xvc2VQYXRoIiwiZHJhd1BhZGRsZSIsInJlY3QiLCJkcmF3IiwiY2xlYXJSZWN0IiwibG9nIiwic2V0SW50ZXJ2YWwiXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQU1BLFNBQVNDLFNBQVNDLGFBQVQsQ0FBdUIsU0FBdkIsQ0FBZjs7QUFFQSxJQUFNQyxNQUFNSCxPQUFPSSxVQUFQLENBQWtCLElBQWxCLENBQVo7O0FBRUEsSUFBSUMsSUFBSUwsT0FBT00sS0FBUCxHQUFlLENBQXZCO0FBQ0EsSUFBSUMsSUFBSVAsT0FBT1EsTUFBUCxHQUFnQixHQUF4Qjs7QUFFQSxJQUFJQyxRQUFRLENBQVo7QUFDQSxJQUFJQyxRQUFRLENBQUMsQ0FBYjtBQUNBLElBQU1DLGFBQWEsRUFBbkI7O0FBRUEsSUFBTUMsY0FBYyxHQUFwQjtBQUNBLElBQU1DLGVBQWUsQ0FBckI7QUFDQSxJQUFJQyxVQUFVZCxPQUFPTSxLQUFQLEdBQWUsQ0FBZixHQUFtQk0sY0FBYyxDQUEvQzs7QUFFQSxJQUFJRyxjQUFjLEtBQWxCO0FBQ0EsSUFBSUMsZUFBZSxLQUFuQjs7QUFFQSxTQUFTQyxlQUFULENBQXlCQyxDQUF6QixFQUE0QjtNQUNsQkMsR0FEa0IsR0FDVkQsQ0FEVSxDQUNsQkMsR0FEa0I7OztNQUd0QkEsUUFBUSxXQUFaLEVBQXlCO2tCQUNULElBQWQ7O01BRUVBLFFBQVEsWUFBWixFQUEwQjttQkFDVCxJQUFmOzs7O0FBSUosU0FBU0MsYUFBVCxDQUF1QkYsQ0FBdkIsRUFBMEI7TUFDaEJDLEdBRGdCLEdBQ1JELENBRFEsQ0FDaEJDLEdBRGdCOzs7TUFHcEJBLFFBQVEsV0FBWixFQUF5QjtrQkFDVCxLQUFkOztNQUVFQSxRQUFRLFlBQVosRUFBMEI7bUJBQ1QsS0FBZjs7OztBQUlKbEIsU0FBU29CLGdCQUFULENBQTBCLFNBQTFCLEVBQXFDSixlQUFyQztBQUNBaEIsU0FBU29CLGdCQUFULENBQTBCLE9BQTFCLEVBQW1DRCxhQUFuQzs7QUFFQSxTQUFTRSxRQUFULEdBQW9CO01BQ2RDLFNBQUo7TUFDSUMsR0FBSixDQUFRbkIsQ0FBUixFQUFXRSxDQUFYLEVBQWNJLFVBQWQsRUFBMEIsQ0FBMUIsRUFBNkJjLEtBQUtDLEVBQUwsR0FBVSxDQUF2QztNQUNJQyxTQUFKLEdBQWdCLFNBQWhCO01BQ0lDLElBQUo7TUFDSUMsU0FBSjs7O0FBR0YsU0FBU0MsVUFBVCxHQUFzQjtNQUNoQlAsU0FBSjtNQUNJUSxJQUFKLENBQVNqQixPQUFULEVBQWtCZCxPQUFPUSxNQUFQLEdBQWdCLEVBQWxDLEVBQXNDSSxXQUF0QyxFQUFtREMsWUFBbkQ7TUFDSWMsU0FBSixHQUFnQixTQUFoQjtNQUNJQyxJQUFKO01BQ0lDLFNBQUo7OztBQUdGLFNBQVNHLElBQVQsR0FBZ0I7TUFDVkMsU0FBSixDQUFjLENBQWQsRUFBaUIsQ0FBakIsRUFBb0JqQyxPQUFPTSxLQUEzQixFQUFrQ04sT0FBT1EsTUFBekM7O01BRUlILElBQUlJLEtBQUosR0FBWVQsT0FBT00sS0FBUCxHQUFlSyxVQUEzQixJQUF5Q04sSUFBSUksS0FBSixHQUFZRSxVQUF6RCxFQUFxRTtZQUMzRCxDQUFDRixLQUFUOztNQUVFRixJQUFJRyxLQUFKLEdBQVlDLFVBQWhCLEVBQTRCO1lBQ2xCLENBQUNELEtBQVQ7O01BRUVILElBQUlHLEtBQUosR0FBWVYsT0FBT1EsTUFBUCxHQUFnQkcsVUFBaEIsR0FBNkIsRUFBN0MsRUFBaUQ7UUFDM0NOLElBQUlTLE9BQUosSUFBZVQsSUFBSVMsVUFBVUYsV0FBakMsRUFBOEM7Y0FDcEMsQ0FBQ0YsS0FBVDtLQURGLE1BRU87Y0FDR3dCLEdBQVIsQ0FBWSxXQUFaOzs7O01BSUFuQixlQUFlRCxVQUFVLENBQTdCLEVBQWdDO2VBQ25CLENBQVg7O01BRUVFLGdCQUFnQkYsVUFBVWQsT0FBT00sS0FBUCxHQUFlTSxXQUE3QyxFQUEwRDtlQUM3QyxDQUFYOzs7OztPQUtHSCxLQUFMO09BQ0tDLEtBQUw7OztBQUdGeUIsWUFBWUgsSUFBWixFQUFrQixFQUFsQjs7In0=
